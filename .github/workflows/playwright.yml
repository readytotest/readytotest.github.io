name: Playwright GitHub Page (manual)
on: workflow_dispatch

jobs:
 GitHub-Page-Test:
   runs-on: ubuntu-latest
   timeout-minutes: 10
   steps:
       
        - name: Message
          run: echo You have manually initiated the Playwright tests against the production environment

        # Since we are just running this workflow manually against the production URL 
        # I could have put this YAML in the Playwright Repo but I wanted to provide
        # an example of the YAML being in one repo and Playwright being in a different
        # repo. This shows the syntax for specifying the path and working-directory 
        # using the checkout action.
        # This may be helpful if the web app and automation scripts are in separate repos

       
        # I don't need this part since I'm testing an external URL, but I left it in as an example
        - name: Checkout Web Application Repo (Example for demo purposes, not needed for these tests)
          uses: actions/checkout@v4.1.4
          
        # Check out secondary repo where Playwright scripts live
        - name: Checkout Playwright Tests Repo
          uses: actions/checkout@v4.1.4
          with:
            repository: readytotest/test-playwright
            #token: ${{ secrets.GH_PAT }} If checking out a private repo, create a secret called `GH_PAT` that contains your personal access token
            ref: main
            path: ./playwright-tests #Copy the Playwright repo to this directory within the GitHub page repo

        - name: List current directory
          run: ls
       
        - name: Install dependencies
          working-directory: ./playwright-tests #This is the sub-directory where the Playwright repo was copied to
          run: npm ci

        - name: Setup Node.js environment in playwright-tests directory with most recent version
          uses: actions/setup-node@v4.0.2
          with:
            node-version: 'latest'

        - name: Print Node.js version in playwright-tests directory and list contents
          run: |
              cd playwright-tests
              node -v
              ls

        - name: Install Playwright Browsers
          working-directory: ./playwright-tests #This is the sub-directory where the Playwright repo was copied to
          run: npx playwright install --with-deps

        - name: Run Playwright tests
          working-directory: ./playwright-tests #This is the sub-directory where the Playwright repo was copied to
          #Tests against https://readytotest.github.io
          run: npx playwright test

        - name: Upload Report to GitHub
          uses: actions/upload-artifact@v4.3.3
          if: always()
          with:
              name: Test Results + Video
              path: ./playwright-tests/playwright-report/
              if-no-files-found: warn
              retention-days: 60