<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <title>Ready to Test (QA)</title>

    <!-- Preconnect to Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <!-- Import from Google Fonts -->
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Comic+Neue:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
      rel="stylesheet"
    />
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/fav.ico" />

    <!-- CSS Stylesheets -->
    <link rel="stylesheet" href="/css/default.css" />
  </head>
  <body>
    <span id="top-philosophy"></span>
    <pre>
88""Yb 888888    db    8888b.  Yb  dP   888888  dP"Yb    888888 888888 .dP"Y8 888888 
88__dP 88__     dPYb    8I  Yb  YbdP      88   dP   Yb     88   88__   `Ybo."   88   
88"Yb  88""    dP__Yb   8I  dY   8P       88   Yb   dP     88   88""   o.`Y8b   88   
88  Yb 888888 dP""""Yb 8888Y"   dP        88    YbodP      88   888888 8bodP'   88                                                                                                  
            </pre
    >
    <i>Software QA and Support ‚òÖ Automation ‚òÖ Manual Testing</i>
    <br />
    <i
      >Current Date & Time (Pacific) ‚òÖ
      <a
        href="https://github.com/readytotest/readytotest.github.io/blob/main/js/dateAndTime.js"
        target="_blank"
        rel="noopener noreferrer"
        ><span id="current-time"></span></a
    ></i>
    <br />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <img src="/html/img/star.svg" height="50px" width="50px" />
    <br />
    ------------------------------------------------------------------------
    <br />
    <b>My QA Philosophy</b> ü§î
    <br />
    <a href="/index.htm">index.htm ‚Æê</a>
    <br />
    <br />
    <div data-testid="qa-philosophy">
      <span class="sections">Thoughts on Software Quality Assurance</span> üí≠
      <br />
      - QA shouldn't only be the person who shows up after the party and
      <br />
      - says, "Hey, someone spilled wine on the couch." üç∑ QA should be
      <br />
      - the one saying, "Hey, maybe don't set the red wine next to the
      <br />
      - dance floor in the first place."
      <br />
      <br />
      - QA isn't just about clicking through features and reporting obvious
      <br />
      - bugs. It's about digging deeper even when things seem fine, asking
      <br />
      - whether things actually make sense, catching the stuff no one else
      <br />
      - thought to look for, and not assuming what's given to you is correct.
      <br />
      <br />
      - See why <a href="/html/it-works.htm">"It works" isn't enough in QA</a>.
      <br />
      <br />
      - The foundation for quality starts upstream even before a single
      <br />
      - line of code is written. Quality issues can start way earlier in
      <br />
      - fuzzy requirements, unclear designs, unchallenged assumptions,
      <br />
      - and overlooked scenarios. Sure, testing can catch the cracks
      <br />
      - later, but it's a lot harder to fix the foundation after the
      <br />
      - house is already built. See an <a href="/html/requirement-gap.htm">example of a bug</a> caused by a
      <br />
      - missing requirement.
      <br />
      <br />
      - You're shaping the product with a focus on user experience and
      <br />
      - business impact. Say you're testing a new checkout flow. The goal
      <br />
      - is more sales. If the process feels cumbersome you flag it, even
      <br />
      - if there are no functional bugs, because it might cause people
      <br />
      - to abandon their cart.
      <br />
      <br />
      - If QA collaborates early they can help the team spot where
      <br />
      - cracks might form before the concrete is even placed.
      <br />
      <br />
      - <span id="wont-do">Not all bugs are worth fixing</span>. In the real world, teams don't
      <br />
      - have unlimited time or dev resources to fix every bug and make
      <br />
      - everything perfect. You prioritize. Some bugs just don't matter
      <br />
      - enough to fix, and so you mark them as "won't do" and move on.
      <br />
      <br />
      - Not all parts of an application are equally important or carry
      <br />
      - the same level of risk.
      <br />
      <br />
      - <span id="pull-requests">Look at the pull request and diff, even if you can't read the code.</span>
      <br />
      - How big of a change is it (one file or ten?), and in which areas?
      <br />
      - Check the PR convo too. If it says, ‚ÄúWait, are we sure this is the
      <br />
      - right behavior?‚Äù or ‚ÄúQuick patch before launch,‚Äù then you should
      <br />
      - probably test more thoroughly. I'm not reviewing code; I'm looking
      <br />
      - at PRs to understand scope, risk, and the story behind the change.
      <br />
      <br />
      - <span id="goodharts-law">It's important to remember</span>
      <a href="https://en.wikipedia.org/wiki/Goodhart%27s_law" target="_blank" rel="noreferrer noopener"
        >Goodhart's Law</a
      >: "When a measure
      <br />
      - becomes a target, it ceases to be a good measure." Just look at
      <br />
      - the
      <a href="https://www.bbc.com/news/business-34324772" target="_blank" rel="noreferrer noopener"
        >VW emissions scandal</a
      >
      for a real-world example of what
      <br />
      - happens when metrics become the goal instead of real quality.
      <br />
      - You may end up with a team more focused on protecting their
      <br />
      - metrics than actually improving software quality.
      <br />
      <br />
      - <span id="tight-deadlines">Tight deadlines</span> don't help either. If teams are under chronic
      <br />
      - pressure to hit deadlines, it often leads to rushing, cutting
      <br />
      - corners, and a string of hotfixes that just patch up other
      <br />
      - hotfixes. That's when quality starts to slip, because the
      <br />
      - focus shifts from doing things right to just getting it done.
      <br />
      ------------------------------------------------------------------------
      <br />
      <span class="sections">Thoughts on Manual Testing</span> üí≠
      <br />
      - I focus on uncovering real issues through exploratory testing.
      <br />
      - It's the freedom to approach testing naturally, seeing the
      <br />
      - software through the eyes of an end user, without being
      <br />
      - confined to a script.
      <br />
      <br />
      - I'm an exploratory tester at heart who first started in UX
      <br />
      - research and I've seen first hand that users don't follow
      <br />
      - expected behaviors or assumptions about workflows. You know
      <br />
      - those preconceived ideas or fixed paths people expect users
      <br />
      - to take, like assuming everyone uses the app the same way
      <br />
      - or follows the ‚Äúhappy path‚Äù perfectly. Real users often do
      <br />
      - things differently or unexpectedly.
      <br />
      <br />
      - I may jot down some areas or scenarios that I want to explore,
      <br />
      - but I don't follow a strict script. In most cases, if written
      <br />
      - documentation of test cases is needed, it should be as code
      <br />
      - in automation scripts.
      <br />
      <br />
      - If someone asks how I avoid missing anything, I'd say writing
      <br />
      - test cases doesn't guarantee you won't miss anything either.
      <br />
      <br />
      - I've worked mostly on small teams and startups where speed and
      <br />
      - flexibility mattered more than heavy docs. The only exception I
      <br />
      - see for written manual cases is in industries with strict compliance,
      <br />
      - otherwise it feels too process-heavy and leads to documentation
      <br />
      - that just collects dust.
      <br />
      ------------------------------------------------------------------------
      <br />
      <span class="sections" id="automation-testing">Thoughts on Automation Testing</span> üí≠
      <br />
      - Automation doesn't replace manual testing. Manual testing is
      <br />
      - needed for exploring new features, identifying edge cases, and
      <br />
      - understanding the user experience.
      <br />
      <br />
      - Not every test is a good candidate or suitable for automation.
      <br />
      <br />
      - The Automation suite can grow too big and become unmanageable.
      <br />
      <br />
      - Be prepared to deal with and troubleshoot flaky tests.
      <br />
      <br />
      - Don't forget to <span class="color-shift-usa">test your tests</span>. Make sure the assertion
      <br />
      - fails when it should and passes when it should...consistently.
      <br />
      <br />
      - Looking ahead is important. If the product roadmap says a part
      <br />
      - of our site is getting a facelift in the next couple of months,
      <br />
      - maybe we shouldn't go all-in on automation scripts just yet.
      <br />
      - The last thing we want is to spend more time maintaining
      <br />
      - automation scripts than we save by having them.
      <br />
      <br />
      - Also we need to keep in mind that automated scripts can be
      <br />
      - sensitive, behaving differently between environments. What
      <br />
      - works perfectly in your local environment, might throw a fit
      <br />
      - in the
      <a
        href="https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners"
        target="_blank"
        rel="noopener noreferrer"
        >GitHub Actions runner</a
      >.
      <br />
      ------------------------------------------------------------------------
      <br />
      <span class="yellowFont" id="joke-section">You made it all the way down here, so we'll give you a Joke.</span>
      <br />
      <span id="joke-id"></span>
      <br />
      <span id="joke-setup"></span>
      <br />
      <span id="joke-punchline" class="blinking-text"></span>
      <br />
      Joke API source file:
      <a
        href="https://github.com/readytotest/readytotest.github.io/blob/main/js/jokeApi.js"
        target="_blank"
        rel="noopener noreferrer"
        >jokeApi.js</a
      >
      <br />
    </div>
    ------------------------------------------------------------------------
    <br />
    <a href="#top-philosophy">Top <span class="arrow" data.cy="up-arrow-philosophy">‚áß</span></a>
    <!-- Keep three line breaks at bottom so it's easier to access the 'Top' link using iphone -->
    <br />
    <br />
    <br />
    <script
      src="https://js.sentry-cdn.com/67cde871b86c2bc34ccf16cbbd00f446.min.js"
      integrity="sha384-Qahst9HuvCM5NFn63+0bd3vv5tZ0ZoxJMxt061RU0dfyOOwHEElLKayYjis4JG/N"
      crossorigin="anonymous"
    ></script>
    <script src="/js/dateAndTime.js"></script>
    <script src="/js/jokeApi.js"></script>
  </body>
</html>
