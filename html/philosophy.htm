<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
        <meta http-equiv="Pragma" content="no-cache">
        <meta http-equiv="Expires" content="0">
        <title>Ready to Test (QA)</title>
        
        <!-- Preconnect to Google Fonts -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        
        <!-- Import from Google Fonts -->
        <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css2?family=Comic+Neue:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
        <!-- Favicon -->
        <link rel="icon" type="image/x-icon" href="/fav.ico">
        
        <!-- CSS Stylesheets -->
        <link rel="stylesheet" href="/css/default.css">
    </head>
    <body>
        <div id="top-philosophy"></div>
            <pre>
88""Yb 888888    db    8888b.  Yb  dP   888888  dP"Yb    888888 888888 .dP"Y8 888888 
88__dP 88__     dPYb    8I  Yb  YbdP      88   dP   Yb     88   88__   `Ybo."   88   
88"Yb  88""    dP__Yb   8I  dY   8P       88   Yb   dP     88   88""   o.`Y8b   88   
88  Yb 888888 dP""""Yb 8888Y"   dP        88    YbodP      88   888888 8bodP'   88                                                                                                  
            </pre>
            <i>Software Quality Assurance ‚òÖ Test Automation ‚òÖ Manual Testing</i>
            <br>
            <i>Current Date & Time (Pacific) ‚òÖ <a href="https://github.com/readytotest/readytotest.github.io/blob/main/js/dateAndTime.js" target="_blank" rel="noopener noreferrer"><span id="current-time"></span></a></i>
            <br>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <img src="/html/img/star.svg" height="50px" width="50px"></img>
            <br>
            ------------------------------------------------------------------------
            <br>
            <b>My QA Philosophy</b> ü§î
            <br>
            <a href="/index.htm">Go back ‚Æê</a>
            <br>
            <br>
            <div data-testid="thoughts-sqa">
            <span class="sections"><b>Thoughts on Software Quality Assurance</b></span> üí≠
            <br>
            - I see my role as an observer and communicator, not as the gatekeeper
            <br>
            - or ‚Äòquality police.‚Äô I provide feedback, not roadblocks. If the team
            <br>
            - wants to ship something, my job is to make them aware of potential
            <br>
            - issues, not to hold things up. This approach has helped me build
            <br>
            - strong, collaborative relationships with developers, designers, and PMs.
            <br>
            <br>
            - Quality is a team effort, not just a post-coding activity.
            <br>
            <br>
            - QA teams are there to complement and enhance quality efforts,
            <br>
            - not to replace them entirely. Developers, product managers,
            <br>
            - designers, and other stakeholders play a crucial role in maintaining
            <br>
            - quality standards throughout the development process.
            <br>
            <br>
            - It's impractical to test every possible scenario.
            <br>
            <br>
            - Additional defects found by exhaustive testing may not justify
            <br>
            - the resources invested in leaving no stone unturned.
            <br>
            <br>
            - Not all parts of an application are equally important
            <br>
            - or carry the same level of risk.
            <br>
            <br>
            - Testing should be concentrated on the areas that are most critical
            <br>
            - to the users and have the highest impact on the user experience. 
            <br>
            <br>
            - Not all bugs are worth fixing.
            <br>
            </div>  
            ------------------------------------------------------------------------
            <br>
            <span class="sections"><b>A Holistic Approach to Quality</span></b></span>
            <br>
            My approach to quality assurance goes beyond finding bugs. I
            <br>
            look at the application as a whole, identifying gaps in requirements
            <br>
            and assessing not just functionality but the overall user experience.
            <br>
            Often, I find areas where the code meets the technical specifications,
            <br>
            but the spec itself didn't fully consider certain user perspectives or
            <br>
            scenarios. My goal is to provide feedback that aligns with real-world
            <br>
            usage, helping teams anticipate potential issues and improving the product
            <br>
            for end users. I aim for software that‚Äôs as functional as it is user-friendly.
            <br>
            ------------------------------------------------------------------------
            <br>
            <span class="sections"><b>Work Style and Collaboration</b></span>
            <br>
            <font color="orange"><b>I value..</b></font>
            <br>
            thoughtful, independent work and can produce high-quality results
            <br>
            in less stressful environments. I perform best in environments
            <br>
            where I have the space to think things through and manage my tasks at
            <br>
            a steady, efficient pace. I prefer fewer meetings and minimal
            <br>
            distractions, allowing me to focus on delivering quality work. While
            <br>
            I work best when I have time for deep focus and independent tasks,
            <br>
            I also thrive in smaller collaborative settings, such as working closely
            <br>
            with developers. I'm always ready to seek help when I hit a roadblock
            <br>
            or be there for the team when they need me.
            <br>
            <br>
            <font color="orange"><b>I do <u>not</u> thrive in..</b></font>
            <br>
            high-pressure environments with tight deadlines, hustle culture, or
            <br>
            excessive time constraints. These types of environments would impact
            <br>
            my ability to perform at my best. I am most effective with predictable,
            <br>
            manageable workloads, where I can focus on producing high-quality work. 
            <br>
            <br>
            <font color="orange"><b>I‚Äôm comfortable..</b></font>
            <br>
            with vague or evolving requirements. I don't need everything spelled
            <br>
            out for me or much handholding. I enjoy figuring things out as I go,
            <br>
            and trust my judgment and experience to guide me when things aren‚Äôt
            <br>
            perfectly laid out. If something doesn‚Äôt feel right, I‚Äôll ask for
            <br>
            clarification.
            <br>
            ------------------------------------------------------------------------
            <br>
            <span class="sections"><b>Thoughts on Manual Testing</b></span> üí≠
            <br>
            I find value in exploratory testing. It's the freedom to approach
            <br>
            testing naturally, seeing the software through the eyes of an end
            <br>
            user. Without the confinement of scripts, it opens the door to
            <br>
            creativity and adaptability. This flexibility allows me to uncover
            <br>
            issues that might otherwise slip through the cracks. It also
            <br>
            encourages usability and UX observations that may not be considered
            <br>
            during a structured test. It's where testing transforms into an art,
            <br>
            using my curiosity, intuition, and testing instinct to uncover
            <br>
            unexpected issues.
            <br>
            ------------------------------------------------------------------------
            <br>
            <span class="sections"><b>Thoughts on Automation Testing</b></span> üí≠
            <br>
            I'm all for automation, but I feel the idea of automating 
            <br>
            everything should be approached with caution.  I'm not jumping
            <br>
            on the automate everything bandwagon and recognize the pitfalls
            <br>
            of flaky tests and heavy maintenance burdens. It's not a
            <br>
            magic wand that makes manual testing disappear. There's a
            <br>
            misconception that it always saves time, but in reality, that's
            <br>
            not a guarantee. I believe in a balance between manual and
            <br>
            automated testing.
            <br>
            <br>
            - Automation doesn't eliminate the need for manual testing.
            <br>
            - Automation won't always save time over manual testing.
            <br>
            - Not every test is a good candidate or suitable for automation.
            <br>
            - Creating an automation script requires an initial time investment.
            <br>
            - Automation scripts require an ongoing time investment (maintenance).
            <br>
            - Automation suite can grow too big and become unmanageable.
            <br>
            - Be prepared to deal with and troubleshoot flaky tests.
            <br>
            - Automation often leads to unexpected challenges.
            <br> 
            <br> 
            While test automation is a valuable tool in quality assurance, it‚Äôs
            <br>
            important to understand that it's not a panacea, a universal remedy for
            <br>
            all issues. Just like the patent medicines of the 1880s that promised
            <br>
            to cure everything from headaches to serious illnesses, automation is
            <br>
            often marketed as a one-size-fits-all solution. However, these so-called
            <br>
            'miracle cures' failed to address underlying issues and, in some cases,
            <br>
            caused more harm than good. Similarly, test automation, when relied upon
            <br>
            too heavily or inappropriately, won't solve all software quality problems.
            <br>
            It has its place, but like any tool, it should be used strategically and
            <br>
            alongside other methods like manual testing to ensure a comprehensive
            <br>
            approach to quality.
            <br>
            <br>
            Looking ahead is important. If the product roadmap says a part
            <br>
            of our site is getting a facelift in the next couple of months, 
            <br>
            maybe we shouldn't go all-in on automation scripts just yet. 
            <br>
            The last thing we want is to spend more time maintaining
            <br>
            automation scripts than we save by having them.
            <br>
            <br>
            Also we need to keep in mind that automated scripts can be sensitive,
            <br>
            behaving differently between environments. What works perfectly in
            <br>
            your local environment, might throw a fit in the <a href="https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners" target="_blank" rel="noopener noreferrer">GitHub Actions runner</a>.
            <br>
            ------------------------------------------------------------------------
            <br>
            <span class="yellowFont" id="joke-section">You made it all the way down here, so we'll give you a Joke.</span>
            <br>
            <span id="joke-id"></span>
            <br>
            <span id="joke-setup"></span>
            <br>
            <span id="joke-punchline" class="blinking-text"></span>
            <br>
            Joke API source file: <a href="https://github.com/readytotest/readytotest.github.io/blob/main/js/jokeApi.js" target="_blank" rel="noopener noreferrer">jokeApi.js</a>
            <br>
            ------------------------------------------------------------------------
            <br>
            <a href ="#top-philosophy">Top <span class="arrow" data.cy="up-arrow-philosophy">‚áß</span></a>
            <!-- Keep three line breaks at bottom so it's easier to access the 'Top' link using iphone -->
            <br>
            <br>
            <br>
            <script src='https://js.sentry-cdn.com/67cde871b86c2bc34ccf16cbbd00f446.min.js' crossorigin="anonymous"></script>
            <script src="/js/dateAndTime.js"></script>
            <script src="/js/jokeApi.js"></script>
        </body>
        </html>